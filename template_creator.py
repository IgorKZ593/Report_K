# template_creator.py
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è Excel-—à–∞–±–ª–æ–Ω–∞ –æ—Ç—á–µ—Ç–∞ —Å –ª–∏—Å—Ç–æ–º ¬´–ø–æ—Ä—Ç—Ñ–µ–ª—å¬ª.
–°–æ–∑–¥–∞–µ—Ç —Ñ–∞–π–ª —Å –∏–º–µ–Ω–µ–º –∫–ª–∏–µ–Ω—Ç–∞ –∏ –¥–∏–∞–ø–∞–∑–æ–Ω–æ–º –¥–∞—Ç, –∞—Ä—Ö–∏–≤–∏—Ä—É–µ—Ç —Å—Ç–∞—Ä—ã–µ —à–∞–±–ª–æ–Ω—ã.
"""

import os
import json
import shutil
from pathlib import Path

# ===============================
# üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ rich
# ===============================
try:
    from rich import print
    from rich.console import Console
except ImportError:
    import os
    print("üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –±–∏–±–ª–∏–æ—Ç–µ–∫—É rich...")
    os.system(f'"{os.sys.executable}" -m pip install rich')
    from rich import print
    from rich.console import Console

console = Console()

# ===============================
# üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ xlwings
# ===============================
try:
    import xlwings as xw
except ImportError:
    console.print("üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –±–∏–±–ª–∏–æ—Ç–µ–∫—É xlwings...", style="bold green")
    os.system(f'"{os.sys.executable}" -m pip install xlwings')
    import xlwings as xw


def load_json_data(path: str) -> dict:
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ JSON-—Ñ–∞–π–ª–∞ –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –ø—É—Ç–∏."""
    try:
        with open(path, 'r', encoding='utf-8') as file:
            return json.load(file)
    except FileNotFoundError:
        raise FileNotFoundError(f"–§–∞–π–ª {path} –Ω–µ –Ω–∞–π–¥–µ–Ω")
    except json.JSONDecodeError as e:
        raise json.JSONDecodeError(f"–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è JSON –≤ —Ñ–∞–π–ª–µ {path}: {e}")


def get_output_filename(name_data: dict, date_data: dict) -> str:
    """–§–æ—Ä–º–∏—Ä—É–µ—Ç –∏–º—è —Ñ–∞–π–ª–∞: –ø–æ—Ä—Ç—Ñ–µ–ª—å_–§–∞–º–∏–ª–∏—è –ò. –û._–¥–∞—Ç–∞_–¥–∞—Ç–∞.xlsx"""
    client_name = name_data.get("client_name", "").strip()
    if client_name:
        parts = client_name.split(" ", 1)
        surname = parts[0] if len(parts) > 0 else ""
        initials = parts[1] if len(parts) > 1 else ""
    else:
        surname = ""
        initials = ""

    start_date = date_data.get('start_date', '')
    end_date = date_data.get('end_date', '')

    full_name = f"{surname} {initials}".strip()
    filename = f"–ø–æ—Ä—Ç—Ñ–µ–ª—å_{full_name}_{start_date}_{end_date}.xlsx"

    return filename


def archive_existing_portfolio_files(folder: str, backup_folder: str) -> list[str]:
    """–ü–µ—Ä–µ–º–µ—â–∞–µ—Ç —Å—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã –ø–æ—Ä—Ç—Ñ–µ–ª—è –≤ –ø–∞–ø–∫—É —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π."""
    moved_files = []
    os.makedirs(backup_folder, exist_ok=True)

    for filename in os.listdir(folder):
        if filename.startswith("–ø–æ—Ä—Ç—Ñ–µ–ª—å") and filename.endswith(".xlsx"):
            source_path = os.path.join(folder, filename)
            dest_path = os.path.join(backup_folder, filename)
            try:
                shutil.move(source_path, dest_path)
                moved_files.append(filename)
                console.print(f"üì¶ –ù–∞–π–¥–µ–Ω —Ñ–∞–π–ª [white]{filename}[/] ‚Üí –ø–µ—Ä–µ–º–µ—â—ë–Ω –≤ [bold]Data_Backup[/]")
            except Exception as e:
                console.print(f"[red]–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ {filename}:[/] {e}")

    return moved_files


def create_excel_template(output_path: str, filename: str):
    """–°–æ–∑–¥–∞–µ—Ç Excel-—Ñ–∞–π–ª —Å –ª–∏—Å—Ç–æ–º ¬´–ø–æ—Ä—Ç—Ñ–µ–ª—å¬ª –∏ –∫–æ—Ä–∏—á–Ω–µ–≤—ã–º —è—Ä–ª—ã–∫–æ–º."""
    try:
        app = xw.App(visible=False)
        wb = app.books.add()

        sheet = wb.sheets[0]
        sheet.name = "–ø–æ—Ä—Ç—Ñ–µ–ª—å"
        sheet.api.Tab.ColorIndex = 53  # –ö–æ—Ä–∏—á–Ω–µ–≤—ã–π

        wb.save(output_path)
        wb.close()
        app.quit()

    except Exception as e:
        console.print(f"[red]–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ Excel-—Ñ–∞–π–ª–∞:[/] {e}")
        raise


def main():
    """
    –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è ‚Äî –æ—Ä–≥–∞–Ω–∏–∑—É–µ—Ç –≤–µ—Å—å –ø—Ä–æ—Ü–µ—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è —à–∞–±–ª–æ–Ω–∞.
    """
    data_work_path = r"F:\Python Projets\Report\Data_work"
    data_backup_path = r"F:\Python Projets\Report\Data_Backup"

    name_clients_path = os.path.join(data_work_path, "name_clients.json")
    report_dates_path = os.path.join(data_work_path, "report_dates.json")

    try:
        # 1. –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ JSON-—Ñ–∞–π–ª–æ–≤
        console.print(f"[bold cyan]üìÑ –ó–∞–≥—Ä—É–∂–∞—é –¥–∞–Ω–Ω—ã–µ –∏–∑ JSON-—Ñ–∞–π–ª–æ–≤...[/]")
        name_data = load_json_data(name_clients_path)
        date_data = load_json_data(report_dates_path)

        # 2. –§–æ—Ä–º–∏—Ä—É–µ–º –∏–º—è –≤—ã—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ (output_path)
        filename = get_output_filename(name_data, date_data)
        output_path = os.path.join(data_work_path, filename)

        console.print(f"[green]üìÅ –ë—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω —Ñ–∞–π–ª:[/] [white]{filename}[/]")

        # 3. –ê—Ä—Ö–∏–≤–∏—Ä—É–µ–º —Å—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã –ø–æ—Ä—Ç—Ñ–µ–ª—è
        console.print("[yellow]üì¶ –ü—Ä–æ–≤–µ—Ä—è—é –Ω–∞–ª–∏—á–∏–µ —Å—Ç–∞—Ä—ã—Ö —Ñ–∞–π–ª–æ–≤ –ø–æ—Ä—Ç—Ñ–µ–ª—è...[/]")
        moved_files = archive_existing_portfolio_files(data_work_path, data_backup_path)

        if moved_files:
            console.print(f"[magenta]üîÅ –ü–µ—Ä–µ–º–µ—â–µ–Ω–æ —Ñ–∞–π–ª–æ–≤:[/] {len(moved_files)}")
        else:
            console.print("[grey]‚è≥ –°—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã –ø–æ—Ä—Ç—Ñ–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã[/]")

        # 4. –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π Excel-—à–∞–±–ª–æ–Ω
        console.print("[blue]üõ† –°–æ–∑–¥–∞—é Excel-—à–∞–±–ª–æ–Ω...[/]")
        create_excel_template(output_path, filename)

        console.print(f"[bold green]‚úîÔ∏è –§–∞–π–ª —à–∞–±–ª–æ–Ω–∞ –æ—Ç—á–µ—Ç–∞ —Å–æ–∑–¥–∞–Ω:[/] [white]{filename}[/]")
        #console.print(f"[dim]üìç –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É:[/] {output_path}")
        console.print(f"[white]üìç –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É:[/] [bold cyan]{output_path}[/]")

    except FileNotFoundError as e:
        console.print(f"[red]‚ùå –û—à–∏–±–∫–∞: {e}[/]")
        console.print("[yellow]‚ö†Ô∏è –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª—ã name_clients.json –∏ report_dates.json —Å—É—â–µ—Å—Ç–≤—É—é—Ç –≤ –ø–∞–ø–∫–µ Data_work[/]")
    except json.JSONDecodeError as e:
        console.print(f"[red]‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è JSON: {e}[/]")
        console.print("[yellow]‚ö†Ô∏è –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å JSON-—Ñ–∞–π–ª–æ–≤[/]")
    except Exception as e:
        console.print(f"[bold red]üí• –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:[/] {e}")


if __name__ == "__main__":
    main()
