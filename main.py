import subprocess
import os

# –ü—É—Ç—å –∫ .bat-—Ñ–∞–π–ª–∞–º
BASE_DIR = os.path.dirname(os.path.abspath(__file__))
BAT_DIR = os.path.join(BASE_DIR, "scripts", "BAT")

# –°–ø–∏—Å–æ–∫ –º–æ–¥—É–ª–µ–π –≤ –Ω—É–∂–Ω–æ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
MODULES = [
    ("insert_date.bat", "üìÖ –í–≤–æ–¥ –¥–∞—Ç—ã"),
    ("name_clients.bat", "üë§ –ò–º—è –∫–ª–∏–µ–Ω—Ç–∞"),
    ("extract_isin.bat", "üîé –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ ISIN"),
    ("map_instruments.bat", "üß≠ –°–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤"),
    ("template_creator.bat", "üìÑ –°–æ–∑–¥–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞ –æ—Ç—á–µ—Ç–∞"),
]


def run_module(bat_file, description):
    print(f"\n[INFO] üî∏ –ó–∞–ø—É—Å–∫ –º–æ–¥—É–ª—è: {description}")
    path = os.path.join(BAT_DIR, bat_file)
    try:
        subprocess.run(path, check=True)
        print(f"[INFO] ‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ: {description}")
    except subprocess.CalledProcessError as e:
        print(f"[ERROR] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ {bat_file}: {e}")
        exit(1)

def main():
    print("=== üöÄ –ó–∞–ø—É—Å–∫ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –æ—Ç—á–µ—Ç–∞ N1 Broker ===")
    for bat, desc in MODULES:
        run_module(bat, desc)
    print("\n=== üèÅ –í—Å–µ —ç—Ç–∞–ø—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ ===")

if __name__ == "__main__":
    main()
